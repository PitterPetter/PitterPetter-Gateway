plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'PitterPatter'
version = '0.0.1-SNAPSHOT'
description = 'PitterPetter: Loventure gateway'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.1")
}

dependencies {
	// Config Server Client → 중앙 설정 서버에서 설정 가져오기
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// Gateway → API Gateway 기능 (WebFlux 기반)
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

	// Actuator → 헬스체크, 모니터링 엔드포인트
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Lombok → Getter/Setter/Builder 자동 생성
	implementation 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// 자동 리빌드
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT 인증 관련
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// API 문서화 (Swagger UI for WebFlux)
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.9'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
